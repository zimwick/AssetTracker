// <auto-generated />
using System;
using AssetTracker_BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTracker_BackEnd.Migrations
{
    [DbContext(typeof(AssetTrackerDbContext))]
    [Migration("20240215170941_Created-More-Seeded-Data")]
    partial class CreatedMoreSeededData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetTracker_BackEnd.Data.ApiUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AssetTracker_BackEnd.Data.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DatePurchased")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("WarrantyExpiration")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatePurchased = new DateOnly(2024, 2, 13),
                            Location = "Main Headquarters",
                            Make = "Apple",
                            Model = "M2 Pro",
                            Name = "Macbook",
                            OwnerFirstName = "Teri",
                            OwnerLastName = "Schandler",
                            PricePaid = 2500.50m,
                            SerialNumber = "X3742GH59",
                            WarrantyExpiration = new DateOnly(2025, 2, 13)
                        },
                        new
                        {
                            Id = 2,
                            DatePurchased = new DateOnly(2023, 1, 25),
                            Location = "HR Building Room 12",
                            Make = "Acer",
                            Model = "Model Pro",
                            Name = "Tablet",
                            OwnerFirstName = "Cathie",
                            OwnerLastName = "Albridge",
                            PricePaid = 450.25m,
                            SerialNumber = "Z3742534TGH",
                            WarrantyExpiration = new DateOnly(2024, 1, 25)
                        },
                        new
                        {
                            Id = 3,
                            DatePurchased = new DateOnly(2020, 8, 26),
                            Location = "North 1st St, front office",
                            Make = "Apple",
                            Model = "M1 Pro",
                            Name = "Macbook",
                            OwnerFirstName = "Trude",
                            OwnerLastName = "Bonner",
                            PricePaid = 2000.00m,
                            SerialNumber = "JDLSRU3957D",
                            WarrantyExpiration = new DateOnly(2021, 4, 3)
                        },
                        new
                        {
                            Id = 4,
                            DatePurchased = new DateOnly(2022, 5, 13),
                            Location = "Auditors office",
                            Make = "Apple",
                            Model = "14 Pro Max",
                            Name = "Iphone",
                            OwnerFirstName = "Cathie",
                            OwnerLastName = "Albridge",
                            PricePaid = 1000.00m,
                            SerialNumber = "ASHDK32GH59",
                            WarrantyExpiration = new DateOnly(2023, 5, 13)
                        },
                        new
                        {
                            Id = 5,
                            DatePurchased = new DateOnly(2020, 1, 25),
                            Location = "Main Headquarters",
                            Make = "Microsoft",
                            Model = "Surface Pro 8",
                            Name = "Surface",
                            OwnerFirstName = "Skye",
                            OwnerLastName = "Howsam",
                            PricePaid = 3000.00m,
                            SerialNumber = "SJGQRY5479",
                            WarrantyExpiration = new DateOnly(2022, 1, 25)
                        },
                        new
                        {
                            Id = 6,
                            DatePurchased = new DateOnly(2024, 2, 13),
                            Location = "Main Headquarters",
                            Make = "Apple",
                            Model = "M2 Pro",
                            Name = "Macbook",
                            OwnerFirstName = "Marcelo",
                            OwnerLastName = "Fabler",
                            PricePaid = 2500.50m,
                            SerialNumber = "XGHS342GH59",
                            WarrantyExpiration = new DateOnly(2025, 2, 13)
                        },
                        new
                        {
                            Id = 7,
                            DatePurchased = new DateOnly(2019, 8, 5),
                            Location = "Testing Center",
                            Make = "Hp",
                            Model = "Spectre X5",
                            Name = "Spectre",
                            OwnerFirstName = "Teri",
                            OwnerLastName = "Schandler",
                            PricePaid = 2900.75m,
                            SerialNumber = "NVHSLHGD234",
                            WarrantyExpiration = new DateOnly(2020, 8, 5)
                        },
                        new
                        {
                            Id = 8,
                            DatePurchased = new DateOnly(2020, 3, 15),
                            Location = "Main Headquarters",
                            Make = "Apple",
                            Model = "12 Pro",
                            Name = "Iphone",
                            OwnerFirstName = "Tracie",
                            OwnerLastName = "Tomson",
                            PricePaid = 800.00m,
                            SerialNumber = "VSJLE35SKC",
                            WarrantyExpiration = new DateOnly(2021, 3, 15)
                        },
                        new
                        {
                            Id = 9,
                            DatePurchased = new DateOnly(2024, 2, 13),
                            Location = "Recovery Room",
                            Make = "Acer",
                            Model = "A515",
                            Name = "Aspire",
                            OwnerFirstName = "Jack",
                            OwnerLastName = "Black",
                            PricePaid = 1500.50m,
                            SerialNumber = "SJCL2CH3SDGE",
                            WarrantyExpiration = new DateOnly(2025, 2, 13)
                        },
                        new
                        {
                            Id = 10,
                            DatePurchased = new DateOnly(2023, 5, 22),
                            Location = "Main Headquarters",
                            Make = "Apple",
                            Model = "M3 Pro",
                            Name = "Macbook",
                            OwnerFirstName = "Josh",
                            OwnerLastName = "Rainer",
                            PricePaid = 2900.00m,
                            SerialNumber = "AHSDL26D2V",
                            WarrantyExpiration = new DateOnly(2024, 5, 22)
                        },
                        new
                        {
                            Id = 11,
                            DatePurchased = new DateOnly(2024, 4, 5),
                            Location = "Main Headquarters",
                            Make = "Apple",
                            Model = "14 Pro Max",
                            Name = "Iphone",
                            OwnerFirstName = "Jeri",
                            OwnerLastName = "Cortex",
                            PricePaid = 1000.00m,
                            SerialNumber = "SJDC30D23",
                            WarrantyExpiration = new DateOnly(2025, 4, 5)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "75358421-e9ad-4612-96be-0c7e754dd415",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AssetTracker_BackEnd.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AssetTracker_BackEnd.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetTracker_BackEnd.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AssetTracker_BackEnd.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
